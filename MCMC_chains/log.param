#-----CLASS v2.9.3 (branch: b'master', hash: b'4701ed16982788fb5647d80cda783d63da56e8f3')-----

#------Experiments to test (separated with commas)-----
data.experiments=['Planck_highl_TTTEEE', 'Planck_lowl_EE', 'Planck_lowl_TT','Planck_SZ_powerspectrum']


#------ Settings for the over-sampling.
# The first element will always be set to 1, for it is the sampling of the
# cosmological parameters. The other numbers describe the over sampling of the
# nuisance parameter space. This array must have the same dimension as the
# number of blocks in your run (so, 1 for cosmological parameters, and then 1
# for each experiment with varying nuisance parameters).
# Note that when using Planck likelihoods, you definitely want to use [1, 4],
# to oversample as much as possible the 14 nuisance parameters.
# Remember to order manually the experiments from slowest to fastest (putting
# Planck as the first set of experiments should be a safe bet, except if you
# also have LSS experiments).
# If you have experiments without nuisance, you do not need to specify an
# additional entry in the over_sampling list (notice for instance that, out of
# the three Planck likelihoods used, only Planck_highl requires nuisance
# parameters, therefore over_sampling has a length of two (cosmology, plus one
# set of nuisance).
data.over_sampling=[1, 4, 6]

#------ Parameter list -------
# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to None
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'. You should put the derived
# parameters at the end, and in case you are using the `-j fast` Cholesky
# decomposition, you should order your nuisance parameters from slowest to
# fastest.
# Cosmological parameters list

data.parameters['omega_b']      = [  2.2377,   None, None,      0.015, 0.01, 'cosmo']
data.parameters['omega_cdm']    = [ 0.12010,   None, None,     0.0013,    1, 'cosmo']
data.parameters['100*theta_s']  = [ 1.04110,   None, None,    0.00030,    1, 'cosmo']
data.parameters['A_s']           = [2.22,    None,   None,     0.002,  1e-9, 'cosmo']
data.parameters['n_s']          = [  0.9659,   None, None,     0.0042,    1, 'cosmo']
data.parameters['tau_reio']     = [  0.0543,  0.004, None,      0.008,    1, 'cosmo']
# HSEbias is the mass bias B in arXiv:1712.00788
data.parameters['B']            =  [1.41,   1., 2., 0.2,    1, 'cosmo']

# Nuisance parameter list, same call, except the name does not have to be a class name

data.parameters['A_cib_217']         = [    47.2,     0,   200,     6.2593,     1, 'nuisance']
data.parameters['cib_index']         = [    -1.3,  -1.3,  -1.3,          0,     1, 'nuisance']
data.parameters['xi_sz_cib']         = [    0.42,     0,     1,       0.33,     1, 'nuisance']
data.parameters['A_sz']              = [    7.23,     0,    10,     1.4689,     1, 'nuisance']
data.parameters['ps_A_100_100']      = [   251.0,     0,   400,     29.438,     1, 'nuisance']
data.parameters['ps_A_143_143']      = [    47.4,     0,   400,     9.9484,     1, 'nuisance']
data.parameters['ps_A_143_217']      = [    47.3,     0,   400,     11.356,     1, 'nuisance']
data.parameters['ps_A_217_217']      = [   119.8,     0,   400,     10.256,     1, 'nuisance']
data.parameters['ksz_norm']          = [    0.01,     0,    10,     2.7468,     1, 'nuisance']
data.parameters['gal545_A_100']      = [    8.86,     0,    50,     1.8928,     1, 'nuisance']
data.parameters['gal545_A_143']      = [   11.10,     0,    50,     1.8663,     1, 'nuisance']
data.parameters['gal545_A_143_217']  = [    19.8,     0,   100,     3.8796,     1, 'nuisance']
data.parameters['gal545_A_217']      = [    95.1,     0,   400,     6.9759,     1, 'nuisance']
data.parameters['galf_EE_A_100']     = [   0.055, 0.055, 0.055,          0,     1, 'nuisance']
data.parameters['galf_EE_A_100_143'] = [   0.040, 0.040, 0.040,          0,     1, 'nuisance']
data.parameters['galf_EE_A_100_217'] = [   0.094, 0.094, 0.094,          0,     1, 'nuisance']
data.parameters['galf_EE_A_143']     = [   0.086, 0.086, 0.086,          0,     1, 'nuisance']
data.parameters['galf_EE_A_143_217'] = [    0.21,  0.21,  0.21,          0,     1, 'nuisance']
data.parameters['galf_EE_A_217']     = [    0.70,  0.70,  0.70,          0,     1, 'nuisance']
data.parameters['galf_EE_index']     = [    -2.4,  -2.4,  -2.4,          0,     1, 'nuisance']
data.parameters['galf_TE_A_100']     = [   0.114,     0,    10,   0.038762,     1, 'nuisance']
data.parameters['galf_TE_A_100_143'] = [   0.134,     0,    10,   0.030096,     1, 'nuisance']
data.parameters['galf_TE_A_100_217'] = [   0.482,     0,    10,   0.086185,     1, 'nuisance']
data.parameters['galf_TE_A_143']     = [   0.224,     0,    10,   0.055126,     1, 'nuisance']
data.parameters['galf_TE_A_143_217'] = [   0.664,     0,    10,   0.082349,     1, 'nuisance']
data.parameters['galf_TE_A_217']     = [    2.08,     0,    10,    0.27175,     1, 'nuisance']
data.parameters['galf_TE_index']     = [    -2.4,  -2.4,  -2.4,          0,     1, 'nuisance']
data.parameters['calib_100T']        = [  999.69,     0,  3000,    0.61251, 0.001, 'nuisance']
data.parameters['calib_217T']        = [  998.16,     0,  3000,    0.63584, 0.001, 'nuisance']
data.parameters['calib_100P']        = [   1.021, 1.021, 1.021,          0,     1, 'nuisance']
data.parameters['calib_143P']        = [   0.966, 0.966, 0.966,          0,     1, 'nuisance']
data.parameters['calib_217P']        = [   1.040, 1.040, 1.040,          0,     1, 'nuisance']
data.parameters['A_cnoise_e2e_100_100_EE'] = [ 1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_cnoise_e2e_143_143_EE'] = [ 1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_cnoise_e2e_217_217_EE'] = [ 1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_100_100_TT'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_143_143_TT'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_143_217_TT'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_217_217_TT'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_100_100_EE'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_100_143_EE'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_100_217_EE'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_143_143_EE'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_143_217_EE'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_sbpx_217_217_EE'] = [       1,     1,     1,          0,     1, 'nuisance']
data.parameters['A_planck']          = [ 1.00061,   0.9,   1.1,     0.0025,     1, 'nuisance']
data.parameters['A_pol']             = [       1,     1,     1,          0,     1, 'nuisance']

# tSZ spectrum nuisance parameters
data.parameters['A_CIB']    = [0.66, 0., 5., 0.2, 1, 'nuisance']
data.parameters['A_IR']     = [2.04, 0., 5., 0.2, 1, 'nuisance']
data.parameters['A_RS']     = [0.0004, 0., 5., 0.2, 1, 'nuisance']


# Derived parameters

data.parameters['sigma8']          = [0, None, None, 0,     1,   'derived']
data.parameters['Omega_Lambda']    = [1, None, None, 0,     1,   'derived']
data.parameters['H0']  = [0, None, None, 0,     1,   'derived']

# Other cosmo parameters (fixed parameters, precision parameters, etc.)

data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
data.cosmo_arguments['k_pivot'] = 0.05
data.cosmo_arguments['P_k_max_h/Mpc'] = 1.

# SZ parameters

# Sky fraction for Planck 2015 y-map power spectrum analysis
data.cosmo_arguments['f_sky'] = 0.35443

data.cosmo_arguments['output'] = 'tSZ_1h,tSZ_2h,tSZ_Trispectrum'
data.cosmo_arguments['multipoles_sz'] = 'P15'
data.cosmo_arguments['nlSZ'] = 18
data.cosmo_arguments['mass function'] = 'M500'
data.cosmo_arguments['pressure profile'] = 'A10'

data.cosmo_arguments['HMF_prescription_NCDM'] = 'CDM'
data.cosmo_arguments['N_ncdm'] =  1
data.cosmo_arguments['N_ur'] = 0.00641
data.cosmo_arguments['T_ncdm'] = 0.71611
data.cosmo_arguments['deg_ncdm'] = 3
data.cosmo_arguments['m_ncdm'] = 0.02


data.cosmo_arguments['M1SZ'] = 1e11
data.cosmo_arguments['M2SZ'] = 1e16
#data.cosmo_arguments['mass_epsabs'] = 1.0e-40
#data.cosmo_arguments['mass_epsrel'] = 1.0e-9
data.cosmo_arguments['mass_epsabs'] = 1.0e-20
data.cosmo_arguments['mass_epsrel'] = 1.0e-6
#data.cosmo_arguments['mass_epsabs'] = 1.0e-9
#data.cosmo_arguments['mass_epsrel'] = 1.0e-2
data.cosmo_arguments['z1SZ'] = 1.0e-05
data.cosmo_arguments['z2SZ'] = 4.0
#data.cosmo_arguments['redshift_epsabs'] = 1.0e-40
#data.cosmo_arguments['redshift_epsrel'] = 1.0e-9
data.cosmo_arguments['redshift_epsabs'] = 1.0e-20
data.cosmo_arguments['redshift_epsrel'] = 1.0e-4
#data.cosmo_arguments['redshift_epsabs'] = 1.0e-9
#data.cosmo_arguments['redshift_epsrel'] = 1.0e-2


data.cosmo_arguments['component of tSZ power spectrum'] = 'diffuse'
# Bellow is relevant only for unresolved/resolved analyses
data.cosmo_arguments['signal-to-noise cut-off for ps completeness analysis'] = 6


data.cosmo_arguments['n_arraySZ'] = 15
data.cosmo_arguments['ndimSZ'] = 50
data.cosmo_arguments['non linear'] = 'halofit'
data.cosmo_arguments['z_max_pk'] = 4.0

data.cosmo_arguments['path_to_class'] = '/scratch/nas_chluba/specdist/bolliet/sz_projects/class_sz'

data.cosmo_arguments['units for tSZ spectrum'] = 'dimensionless'
data.cosmo_arguments['write sz results to files'] = 'no'
data.cosmo_arguments['sz_verbose'] = 0

data.cosmo_arguments['create reference trispectrum for likelihood code'] = 'NO'
data.cosmo_arguments['path to reference trispectrum for likelihood code'] = '/scratch/nas_chluba/specdist/bolliet/sz_projects/montepython_sz/data/Planck_SZ_powerspectrum'
data.cosmo_arguments['append_name_trispectrum_ref'] = 'total'


data.write_step=5


#-----Likelihood-Planck_highl_TTTEEE-----
Planck_highl_TTTEEE.path_clik = '/scratch/nas_chluba/specdist/planck_2018_likelihood_code_and_data/plc-3.01/../plc_3.0/hi_l/plik/plik_rd12_HM_v22b_TTTEEE.clik'
Planck_highl_TTTEEE.A_planck_prior_center = 1
Planck_highl_TTTEEE.A_planck_prior_variance = 0.0025
Planck_highl_TTTEEE.calib_100T_prior_center = 1.0002
Planck_highl_TTTEEE.calib_100T_prior_variance = 0.0007
Planck_highl_TTTEEE.calib_217T_prior_center = 0.99805
Planck_highl_TTTEEE.calib_217T_prior_variance = 0.00065
Planck_highl_TTTEEE.gal545_A_100_prior_center = 8.6
Planck_highl_TTTEEE.gal545_A_100_prior_variance = 2
Planck_highl_TTTEEE.gal545_A_143_prior_center = 10.6
Planck_highl_TTTEEE.gal545_A_143_prior_variance = 2
Planck_highl_TTTEEE.gal545_A_143_217_prior_center = 23.5
Planck_highl_TTTEEE.gal545_A_143_217_prior_variance = 8.5
Planck_highl_TTTEEE.gal545_A_217_prior_center = 91.9
Planck_highl_TTTEEE.gal545_A_217_prior_variance = 20
Planck_highl_TTTEEE.galf_TE_A_100_prior_center = 0.13
Planck_highl_TTTEEE.galf_TE_A_100_prior_variance = 0.042
Planck_highl_TTTEEE.galf_TE_A_100_143_prior_center = 0.13
Planck_highl_TTTEEE.galf_TE_A_100_143_prior_variance = 0.036
Planck_highl_TTTEEE.galf_TE_A_100_217_prior_center = 0.46
Planck_highl_TTTEEE.galf_TE_A_100_217_prior_variance = 0.09
Planck_highl_TTTEEE.galf_TE_A_143_prior_center = 0.207
Planck_highl_TTTEEE.galf_TE_A_143_prior_variance = 0.072
Planck_highl_TTTEEE.galf_TE_A_143_217_prior_center = 0.69
Planck_highl_TTTEEE.galf_TE_A_143_217_prior_variance = 0.09
Planck_highl_TTTEEE.galf_TE_A_217_prior_center = 1.938
Planck_highl_TTTEEE.galf_TE_A_217_prior_variance = 0.54
Planck_highl_TTTEEE.joint_sz_prior = True
Planck_highl_TTTEEE.joint_sz_prior_center = 9.5
Planck_highl_TTTEEE.joint_sz_prior_variance = 3.0


#-----Likelihood-Planck_lowl_EE-----
Planck_lowl_EE.path_clik = '/scratch/nas_chluba/specdist/planck_2018_likelihood_code_and_data/plc-3.01/../plc_3.0/low_l/simall/simall_100x143_offlike5_EE_Aplanck_B.clik'


#-----Likelihood-Planck_lowl_TT-----
Planck_lowl_TT.path_clik = '/scratch/nas_chluba/specdist/planck_2018_likelihood_code_and_data/plc-3.01/../plc_3.0/low_l/commander/commander_dx12_v3_2_29.clik'


#-----Likelihood-Planck_SZ_powerspectrum-----
Planck_SZ_powerspectrum.data_directory = '/scratch/nas_chluba/specdist/bolliet/sz_projects/montepython_sz/data'
Planck_SZ_powerspectrum.data_file = 'Planck_SZ_powerspectrum/SZ_and_fg_models_urc_snr6_fky_0d35443.txt'
Planck_SZ_powerspectrum.use_nuisance = ['A_CIB', 'A_IR', 'A_RS']
Planck_SZ_powerspectrum.use_trispectrum = 'yes'
Planck_SZ_powerspectrum.fixed_covmat = 'no'
Planck_SZ_powerspectrum.trispectrum_file = '/scratch/nas_chluba/specdist/bolliet/sz_projects/montepython_sz/data/Planck_SZ_powerspectrum/tSZ_trispectrum_ref_total.txt'


#-----------Cosmological-arguments---------
data.cosmo_arguments.update({'sBBN file': '/scratch/nas_chluba/specdist/bolliet/sz_projects/class_sz/bbn/sBBN.dat', 'k_pivot': 0.05, 'P_k_max_h/Mpc': 1.0, 'f_sky': 0.35443, 'output': 'tSZ_1h,tSZ_2h,tSZ_Trispectrum tCl lCl pCl ', 'multipoles_sz': 'P15', 'nlSZ': 18, 'mass function': 'M500', 'pressure profile': 'A10', 'HMF_prescription_NCDM': 'CDM', 'N_ncdm': 1, 'N_ur': 0.00641, 'T_ncdm': 0.71611, 'deg_ncdm': 3, 'm_ncdm': 0.02, 'M1SZ': 100000000000.0, 'M2SZ': 1e+16, 'mass_epsabs': 1e-20, 'mass_epsrel': 1e-06, 'z1SZ': 1e-05, 'z2SZ': 4.0, 'redshift_epsabs': 1e-20, 'redshift_epsrel': 0.0001, 'component of tSZ power spectrum': 'diffuse', 'signal-to-noise cut-off for ps completeness analysis': 6, 'n_arraySZ': 15, 'ndimSZ': 50, 'non linear': 'halofit', 'z_max_pk': 4.0, 'path_to_class': '/scratch/nas_chluba/specdist/bolliet/sz_projects/class_sz', 'units for tSZ spectrum': 'dimensionless', 'write sz results to files': 'no', 'sz_verbose': 0, 'create reference trispectrum for likelihood code': 'NO', 'path to reference trispectrum for likelihood code': '/scratch/nas_chluba/specdist/bolliet/sz_projects/montepython_sz/data/Planck_SZ_powerspectrum', 'append_name_trispectrum_ref': 'total', 'lensing': ' yes ', 'l_max_scalars': 2508})


#--------Default-Configuration------
data.path['root']	= '/scratch/nas_chluba/specdist/bolliet/sz_projects/montepython_sz'
data.path['MontePython']	= '/scratch/nas_chluba/specdist/bolliet/sz_projects/montepython_sz/montepython'
data.path['data']	= '/scratch/nas_chluba/specdist/bolliet/sz_projects/montepython_sz/data'
data.path['cosmo']	= '/scratch/nas_chluba/specdist/bolliet/sz_projects/class_sz'
data.path['clik']	= '/scratch/nas_chluba/specdist/planck_2018_likelihood_code_and_data/plc-3.01'
